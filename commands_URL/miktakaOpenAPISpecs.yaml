openapi: 3.0.3
info:
  description: 'This OAS file describes the endpoint of the temporal representation of NGSI-LD endpoint used for the CIRCULOOS project'
  version: latest
  title: Temporal Retrival for CIRCULOOS
tags:
  - name: ETSI
    description: European Telecommunications Standards Institute
    externalDocs:
      description: Find out more
      url: 'http://www.etsi.org'
  - name: JSON-LD
    description: JSON for Linked Data
    externalDocs:
      description: Find out more
      url: 'https://json-ld.org/'
  - name: NGSI-LD API
    description: API defined by the ETSI ISG CIM
    externalDocs:
      description: Preliminary Specification
      url: 'http://www.etsi.org/deliver/etsi_gs/CIM/001_099/004/01.01.01_60/gs_CIM004v010101p.pdf'
  - name: CIRCULOOS
    description: CIRCULOOS offers a transformative opportunity towards circular economy for micro, small and medium-sized enterprises (MSMEs) where cutting-edge tools leverage the power of trusted data to build an ecosystem of collaborators where supply chains are dynamic, and optimal in terms of their impact on the environment and orchestrated end-to-end. Blockchain, DataSpaces for the Industry 4.0, Process Automation, AI-based LCA, Machine Vision and Robotics are fused together to form the machinery for this transformation.
    externalDocs:
      description: Find out more
      url: 'http://circuloos.eu'
paths:
  /temporal/entities/:
    get:
      description: Query temporal evolution of Entities from an NGSI-LD system
      operationId: queryTemporalEntities
      tags:
        - Temporal Retrieval
      parameters:
        - $ref: '#/components/parameters/link'
        - $ref: '#/components/parameters/id'
        - $ref: '#/components/parameters/idPattern'
        - $ref: '#/components/parameters/type'
        - $ref: '#/components/parameters/attrs'
        - $ref: '#/components/parameters/q'
        - $ref: '#/components/parameters/georel'
        - $ref: '#/components/parameters/geometry'
        - $ref: '#/components/parameters/coordinates'
        - $ref: '#/components/parameters/geoproperty'
        - $ref: '#/components/parameters/timerel'
        - $ref: '#/components/parameters/timeproperty'
        - $ref: '#/components/parameters/time'
        - $ref: '#/components/parameters/endTime'
        - $ref: '#/components/parameters/csf'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageAnchor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/components-parameters-options'
        - $ref: '#/components/parameters/lastN'
      responses:
        '200':
          description: OK
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/EntityTemporalList'
              examples:
                simple:
                  externalValue: 'http://localhost:8090/examples/EntityTemporalList-example.json'
            application/json:
              schema:
                $ref: '#/components/schemas/EntityTemporalList'
        '400':
          description: Bad request
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/temporal/entities/{entityId}':
    get:
      description: Retrieve the temporal representation of an specific Entity from an NGSI-LD system. It's possible to specify the Entity attributes to be retrieved by using query parameters
      operationId: retrieveEntityTemporalById
      tags:
        - Temporal Retrieval
      parameters:
        - $ref: '#/components/parameters/entityId'
        - $ref: '#/components/parameters/link'
        - $ref: '#/components/parameters/attrs'
        - $ref: '#/components/parameters/components-parameters-options'
        - $ref: '#/components/parameters/timerel'
        - $ref: '#/components/parameters/timeproperty'
        - $ref: '#/components/parameters/time'
        - $ref: '#/components/parameters/endTime'
        - $ref: '#/components/parameters/lastN'
      responses:
        '200':
          description: OK
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/EntityTemporal'
              examples:
                simple:
                  externalValue: 'http://localhost:8090/examples/EntityTemporal-example_C5.5.3.json'
            application/json:
              schema:
                $ref: '#/components/schemas/EntityTemporal'
        '400':
          description: Bad request
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  '/temporal/entityOperations/query':
    post:
      description: Query temporal evolution of Entities from an NGSI-LD system
      operationId: queryTemporalEntitiesOnPost
      tags:
        - Temporal Retrieval
      parameters:
        - $ref: '#/components/parameters/link'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageAnchor'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/components-parameters-options'
        - $ref: '#/components/parameters/lastN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
      responses:
        '200':
          description: OK
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/EntityTemporalList'
              examples:
                simple:
                  externalValue: 'http://localhost:8090/examples/EntityTemporalList-example.json'
            application/json:
              schema:
                $ref: '#/components/schemas/EntityTemporalList'
        '400':
          description: Bad request
          content:
            application/ld+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
components:
  parameters:
    id:
      name: id
      description: Comma separated list of URIs to be retrieved
      in: query
      required: false
      schema:
        type: string
    idPattern:
      name: idPattern
      description: Regular expression that must be matched by Entity ids
      in: query
      required: false
      schema:
        type: string
        format: regexp
    type:
      name: type
      description: Comma separated list of Entity type names to be retrieved
      in: query
      required: false
      schema:
        type: string
        minLength: 1
    attrs:
      name: attrs
      description: Comma separated list of attribute names (properties or relationships) to be retrieved
      in: query
      required: false
      schema:
        type: string
        minLength: 1
    q:
      name: q
      description: Query
      in: query
      required: false
      schema:
        type: string
        minLength: 1
    georel:
      name: georel
      description: Geo-relationship
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/georel'
    geometry:
      name: geometry
      description: Geometry
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/geometryEnum'
    coordinates:
      name: coordinates
      description: Coordinates serialized as a string
      in: query
      required: false
      schema:
        type: string
        minLength: 1
    geoproperty:
      name: geoproperty
      description: The name of the property that contains the geo-spatial data that will be used to resolve the geoquery
      in: query
      required: false
      schema:
        type: string
        minLength: 1
    csf:
      name: csf
      description: Context Source Filter
      in: query
      required: false
      schema:
        type: string
        minLength: 1
    limit:
      name: limit
      description: Pagination limit
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
    pageAnchor:
      name: pageAnchor
      description: Size of the page to be returned
      in: query
      required: false
      schema:
        type: string
        format: uri
    pageSize:
      name: pageSize
      description: Size of the page to be returned
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
        maximum: 100
    offset:
      name: offset
      description: Pagination offset
      in: query
      required: false
      schema:
        type: integer
        default: 0
    options:
      name: options
      description: Options dictionary
      in: query
      required: false
      schema:
        type: string
        enum:
          - keyValues
          - sysAttrs
    entityId:
      name: entityId
      description: Entity Id
      in: path
      required: true
      schema:
        type: string
        format: uri
    parameters-type:
      name: type
      description: Entity Type
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/Name'
    parameters-options:
      name: options
      description: Indicates that no attribute overwrite shall be performed
      in: query
      required: false
      schema:
        type: string
        enum:
          - noOverwrite
    attrId:
      name: attrId
      description: Attribute Id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/Name'
    subscriptionId:
      name: subscriptionId
      description: Subscription Id
      in: path
      required: true
      schema:
        type: string
        format: uri
    registrationId:
      name: registrationId
      description: Registration Id
      in: path
      required: true
      schema:
        type: string
        format: uri
    link:
      name: Link
      description: Link header to be used as described in the json-ld spec.
      in: header
      required: false
      schema:
        type: string
    timerel:
      name: timerel
      description: Time relationship
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/timerel'
    timeproperty:
      name: timeproperty
      description: The name of the property that contains the temporal data that will be used to resolve the temporal query
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/Name'
    time:
      name: timeAt
      description: start time for temporal query
      in: query
      required: false
      schema:
        type: string
        format: date-time
    endTime:
      name: endTimeAt
      description: end time for temporal query
      in: query
      required: false
      schema:
        type: string
        format: date-time
    components-parameters-options:
      name: options
      description: Options dictionary
      in: query
      required: false
      schema:
        type: string
        enum:
          - temporalValues
          - sysAttrs
    lastN:
      name: lastN
      description: Only retrieve last N instances
      in: query
      required: false
      schema:
        type: integer
        minimum: 1
    instanceId:
      name: instanceId
      description: Instance Id
      in: path
      required: true
      schema:
        type: string
        format: uri
  schemas:
    georelEnum:
      type: string
      enum:
        - equals
        - disjoint
        - intersects
        - within
        - contains
        - overlaps
        - ^near;((maxDistance==\d+)|(minDistance==\d+))$
    georel:
      type: string
    geometryEnum:
      type: string
    geometryType:
      type: string
    positionDefinition:
      description: A single position
      type: array
      minItems: 2
      maxItems: 2
      items:
        type: number
      additionalProperties: false
    positionArrayDefinition:
      description: An array of positions
      type: array
      items:
        $ref: '#/components/schemas/positionDefinition'
    lineStringDefinition:
      description: An array of two or more positions
      type: array
      items:
        $ref: '#/components/schemas/positionDefinition'
      minItems: 2
    linearRingDefinition:
      description: An array of four positions where the first equals the last
      type: array
      items:
        $ref: '#/components/schemas/positionDefinition'
      minItems: 4
    polygonDefinition:
      description: An array of linear rings
      type: array
      items:
        $ref: '#/components/schemas/linearRingDefinition'
    coordinates:
      oneOf:
        - $ref: '#/components/schemas/positionDefinition'
        - $ref: '#/components/schemas/positionArrayDefinition'
        - $ref: '#/components/schemas/polygonDefinition'
        - $ref: '#/components/schemas/lineStringDefinition'
    LdContext:
      type: object
    Point:
      type: object
      properties:
        type:
          type: string
          enum:
            - Point
        coordinates:
          $ref: '#/components/schemas/positionDefinition'
    MultiPoint:
      type: object
      properties:
        type:
          type: string
          enum:
            - MultiPoint
        coordinates:
          $ref: '#/components/schemas/positionArrayDefinition'
    Polygon:
      type: object
      properties:
        type:
          type: string
          enum:
            - Polygon
        coordinates:
          $ref: '#/components/schemas/polygonDefinition'
    LineString:
      type: object
      properties:
        type:
          type: string
          enum:
            - LineString
        coordinates:
          $ref: '#/components/schemas/lineStringDefinition'
    MultiLineString:
      type: object
      properties:
        type:
          type: string
          enum:
            - MultiLineString
        coordinates:
          type: array
          items:
            $ref: '#/components/schemas/lineStringDefinition'
    MultiPolygon:
      type: object
      properties:
        type:
          type: string
          enum:
            - MultiPolygon
        coordinates:
          type: array
          items:
            $ref: '#/components/schemas/polygonDefinition'
    Geometry:
      description: ' Avalid GeoJSON geometry object'
      oneOf:
        - $ref: '#/components/schemas/Point'
        - $ref: '#/components/schemas/MultiPoint'
        - $ref: '#/components/schemas/Polygon'
        - $ref: '#/components/schemas/LineString'
        - $ref: '#/components/schemas/MultiLineString'
        - $ref: '#/components/schemas/MultiPolygon'
    observedAt:
      type: string
      format: date-time
    createdAt:
      type: string
      format: date-time
    modifiedAt:
      type: string
      format: date-time
    datasetId:
      type: string
      format: uri
    instanceId:
      type: string
      format: uri
    Property:
      type: object
      properties:
        type:
          type: string
          enum:
            - Property
        value:
          oneOf:
            - type: string
            - type: number
            - type: boolean
            - type: object
            - type: array
              items:
                oneOf:
                  - type: string
                  - type: number
                  - type: boolean
                  - type: object
        observedAt:
          $ref: '#/components/schemas/observedAt'
        createdAt:
          $ref: '#/components/schemas/createdAt'
        modifiedAt:
          $ref: '#/components/schemas/modifiedAt'
        datasetId:
          $ref: '#/components/schemas/datasetId'
        instanceId:
          $ref: '#/components/schemas/instanceId'
        unitCode:
          type: string
      required:
        - type
        - value
      additionalProperties:
        oneOf:
          - $ref: '#/components/schemas/Property'
          - $ref: '#/components/schemas/Relationship'
    Relationship:
      type: object
      properties:
        type:
          type: string
          enum:
            - Relationship
        object:
          type: string
          format: uri
        observedAt:
          $ref: '#/components/schemas/observedAt'
        createdAt:
          $ref: '#/components/schemas/createdAt'
        modifiedAt:
          $ref: '#/components/schemas/modifiedAt'
        datasetId:
          $ref: '#/components/schemas/datasetId'
        instanceId:
          $ref: '#/components/schemas/instanceId'
      required:
        - type
        - object
      additionalProperties:
        oneOf:
          - $ref: '#/components/schemas/Property'
          - $ref: '#/components/schemas/Relationship'
    GeoProperty:
      type: object
      properties:
        type:
          type: string
          enum:
            - GeoProperty
        value:
          type: object
        observedAt:
          $ref: '#/components/schemas/observedAt'
        createdAt:
          $ref: '#/components/schemas/createdAt'
        modifiedAt:
          $ref: '#/components/schemas/modifiedAt'
        datasetId:
          $ref: '#/components/schemas/datasetId'
        instanceId:
          $ref: '#/components/schemas/instanceId'
        unitCode:
          type: string
      required:
        - type
        - value
      additionalProperties:
        oneOf:
          - $ref: '#/components/schemas/Geometry'
          - $ref: '#/components/schemas/Property'
          - $ref: '#/components/schemas/Relationship'
    Name:
      type: string
      pattern: '^((\d|[a-zA-Z]|_)+(:(\d|[a-zA-Z]|_)+)?(#\d+)?)$'
      minLength: 1
      description: NGSI-LD Name
    EntityFragment:
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/LdContext'
        location:
          $ref: '#/components/schemas/GeoProperty'
        observationSpace:
          $ref: '#/components/schemas/GeoProperty'
        operationSpace:
          $ref: '#/components/schemas/GeoProperty'
        id:
          type: string
          format: uri
        type:
          $ref: '#/components/schemas/Name'
        createdAt:
          $ref: '#/components/schemas/createdAt'
        modifiedAt:
          $ref: '#/components/schemas/modifiedAt'
      additionalProperties:
        oneOf:
          - $ref: '#/components/schemas/Property'
          - $ref: '#/components/schemas/Relationship'
          - $ref: '#/components/schemas/GeoProperty'
    Entity:
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/LdContext'
        location:
          $ref: '#/components/schemas/GeoProperty'
        observationSpace:
          $ref: '#/components/schemas/GeoProperty'
        operationSpace:
          $ref: '#/components/schemas/GeoProperty'
        id:
          type: string
          format: uri
        type:
          $ref: '#/components/schemas/Name'
        createdAt:
          $ref: '#/components/schemas/createdAt'
        modifiedAt:
          $ref: '#/components/schemas/modifiedAt'
      additionalProperties:
        oneOf:
          - $ref: '#/components/schemas/Property'
          - $ref: '#/components/schemas/Relationship'
          - $ref: '#/components/schemas/GeoProperty'
    EntityList:
      type: array
      items:
        $ref: '#/components/schemas/Entity'
    ProblemDetails:
      type: object
      properties:
        type:
          type: string
          format: uri
        title:
          type: string
        detail:
          type: string
      required:
        - type
    NotUpdatedDetails:
      type: object
      properties:
        attributeName:
          type: string
          pattern: ''
        reason:
          type: string
          minLength: 1
    UpdateResult:
      type: object
      properties:
        updated:
          type: array
          items:
            type: string
            pattern: ''
        notUpdated:
          type: array
          items:
            $ref: '#/components/schemas/NotUpdatedDetails'
    EntityInfo:
      type: object
      properties:
        id:
          type: object
        type:
          type: string
        idPattern:
          type: string
          format: regex
      required:
        - type
    GeoQuery:
      type: object
      required:
        - geometry
        - coordinates
        - georel
      properties:
        georel:
          $ref: '#/components/schemas/georel'
        coordinates:
          type: array
          items:
            oneOf:
              - type: integer
              - $ref: '#/components/schemas/coordinates'
        geometry:
          $ref: '#/components/schemas/geometryType'
        geoproperty:
          type: string
    SubscriptionFragment:
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/LdContext'
        entities:
          type: array
          items:
            $ref: '#/components/schemas/EntityInfo'
          minItems: 1
        name:
          type: string
          minLength: 1
        description:
          type: string
          minLength: 1
        watchedAttributes:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Name'
          uniqueItems: true
        timeInterval:
          type: number
          minimum: 0
        expires:
          type: string
          format: date-time
        isActive:
          type: boolean
        throttling:
          type: number
          minimum: 1
        q:
          type: string
        geoQ:
          $ref: '#/components/schemas/GeoQuery'
        csf:
          type: string
    Endpoint:
      type: object
      required:
        - uri
      properties:
        uri:
          type: string
          format: uri
        accept:
          type: string
          enum:
            - application/ld+json
    NotificationParams:
      type: object
      properties:
        attributes:
          type: array
          minItems: 1
          items:
            type: string
            minLength: 1
          uniqueItems: true
        format:
          type: string
        endpoint:
          $ref: '#/components/schemas/Endpoint'
        status:
          type: string
          enum:
            - ok
            - failed
        timesSent:
          type: number
          minimum: 1
        lastNotification:
          type: string
          format: date-time
        lastFailure:
          type: string
          format: date-time
        lastSuccess:
          type: string
          format: date-time
      required:
        - endpoint
    Subscription:
      allOf:
        - $ref: '#/components/schemas/SubscriptionFragment'
        - type: object
          properties:
            id:
              type: string
              format: uri
            type:
              type: string
              enum:
                - Subscription
            notification:
              $ref: '#/components/schemas/NotificationParams'
            status:
              type: string
              enum:
                - active
                - paused
                - expired
            createdAt:
              $ref: '#/components/schemas/createdAt'
            modifiedAt:
              $ref: '#/components/schemas/modifiedAt'
          allOf:
            - required:
                - id
                - type
                - notification
            - anyOf:
                - required:
                    - entities
                - required:
                    - watchedAttributes
    SubscriptionList:
      type: array
      items:
        $ref: '#/components/schemas/Subscription'
    RegistrationInfo:
      type: object
      properties:
        entities:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/EntityInfo'
        properties:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Name'
          uniqueItems: true
        relationships:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Name'
          uniqueItems: true
    TimeInterval:
      type: object
      required:
        - start
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
    ContextSourceRegistrationFragment:
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/LdContext'
        information:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/RegistrationInfo'
        observationInterval:
          $ref: '#/components/schemas/TimeInterval'
        managementInterval:
          $ref: '#/components/schemas/TimeInterval'
        location:
          $ref: '#/components/schemas/Geometry'
        observationSpace:
          $ref: '#/components/schemas/Geometry'
        operationSpace:
          $ref: '#/components/schemas/Geometry'
        expires:
          type: string
          format: date-time
        name:
          type: string
          minLength: 1
        description:
          type: string
          minLength: 1
        endpoint:
          type: string
          format: uri
      additionalProperties: true
    ContextSourceRegistration:
      allOf:
        - $ref: '#/components/schemas/ContextSourceRegistrationFragment'
        - type: object
          properties:
            id:
              type: string
              format: uri
            type:
              type: string
              enum:
                - ContextSourceRegistration
            createdAt:
              $ref: '#/components/schemas/createdAt'
            modifiedAt:
              $ref: '#/components/schemas/modifiedAt'
          required:
            - id
            - type
            - endpoint
            - information
    ContextSourceRegistrationList:
      type: array
      items:
        $ref: '#/components/schemas/ContextSourceRegistration'
    BatchEntityError:
      type: object
      properties:
        entityId:
          type: string
          format: uri
        error:
          $ref: '#/components/schemas/ProblemDetails'
    BatchOperationResult:
      type: object
      properties:
        success:
          type: array
          items:
            type: string
            format: uri
        error:
          type: array
          items:
            $ref: '#/components/schemas/BatchEntityError'
    timerel:
      type: string
      enum:
        - before
        - after
        - between
    EntityTemporalFragment:
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/LdContext'
        location:
          type: array
          items:
            $ref: '#/components/schemas/GeoProperty'
          minItems: 1
        observationSpace:
          type: array
          items:
            $ref: '#/components/schemas/GeoProperty'
          minItems: 1
        operationSpace:
          type: array
          items:
            $ref: '#/components/schemas/GeoProperty'
          minItems: 1
        id:
          type: string
          format: uri
        type:
          $ref: '#/components/schemas/Name'
      additionalProperties:
        oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/Property'
            minItems: 1
          - type: array
            items:
              $ref: '#/components/schemas/Relationship'
            minItems: 1
          - type: array
            items:
              $ref: '#/components/schemas/GeoProperty'
            minItems: 1
    EntityTemporal:
      type: object
      properties:
        '@context':
          $ref: '#/components/schemas/LdContext'
        location:
          type: array
          items:
            $ref: '#/components/schemas/GeoProperty'
          minItems: 1
        observationSpace:
          type: array
          items:
            $ref: '#/components/schemas/GeoProperty'
          minItems: 1
        operationSpace:
          type: array
          items:
            $ref: '#/components/schemas/GeoProperty'
          minItems: 1
        id:
          type: string
          format: uri
        type:
          $ref: '#/components/schemas/Name'
        createdAt:
          $ref: '#/components/schemas/createdAt'
        modifiedAt:
          $ref: '#/components/schemas/modifiedAt'
      additionalProperties:
        oneOf:
          - type: array
            items:
              $ref: '#/components/schemas/Property'
            minItems: 1
          - type: array
            items:
              $ref: '#/components/schemas/Relationship'
            minItems: 1
          - type: array
            items:
              $ref: '#/components/schemas/GeoProperty'
            minItems: 1
      required:
        - type
        - id
    EntityTemporalList:
      type: array
      items:
        $ref: '#/components/schemas/EntityTemporal'
    TemporalQuery:
      type: object
      properties:
        timerel:
          type: string
        timeAt:
          type: string
          format: date-time
        endTimeAt:
          type: string
          format: date-time
        timeproperty:
          type: string
    Query:
      type: object
      properties:
        type:
          type: string
          enum:
            - Query
        entities:
          $ref: '#/components/schemas/EntityInfo'
        attrs:
          type: array
          items:
            type: string
        q:
          type: string
        geoQ:
          $ref: '#/components/schemas/GeoQuery'
        temporalQ:
          $ref: '#/components/schemas/TemporalQuery'
        csf:
          type: string